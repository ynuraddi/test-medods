{
    "swagger": "2.0",
    "info": {
        "title": "Medods test assignment, by @ynuraddi",
        "contact": {
            "url": "https://t.me/pelmenstruation",
            "email": "definston@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/login/{user_id}": {
            "get": {
                "description": "Create session and return new pair access and refresh tokens.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create session",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Refresh session and return new pair access and refresh tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh session",
                "parameters": [
                    {
                        "description": "refresh token for refresh session",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.refreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid tokens",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    }
                }
            }
        },
        "/session/list": {
            "get": {
                "description": "Show rows of session table from database.",
                "tags": [
                    "test"
                ],
                "summary": "List session",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    }
                }
            }
        },
        "/session/update": {
            "post": {
                "description": "Update session in database. Needed for testing.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "Update session",
                "parameters": [
                    {
                        "description": "update session request, find session by id and version and update",
                        "name": "update_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.updateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Create user, needed for testing with few users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "format": "email",
                        "description": "create user request, email of user",
                        "name": "create_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "description": "Show rows of users table from database.",
                "tags": [
                    "test"
                ],
                "summary": "List user",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.errMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.createUserRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "mock@gmail.com"
                }
            }
        },
        "http.errMsg": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "http.refreshRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "http.updateSessionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "access_token_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "refresh_token_hash": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}